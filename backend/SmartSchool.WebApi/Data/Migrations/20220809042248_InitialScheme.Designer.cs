// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartSchool.Api.Data.Context;

#nullable disable

namespace SmartSchool.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220809042248_InitialScheme")]
    partial class InitialScheme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartSchool.Domain.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_professores");

                    b.ToTable("professores", (string)null);
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_alunos");

                    b.ToTable("alunos", (string)null);
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer")
                        .HasColumnName("subject_id");

                    b.HasKey("StudentId", "SubjectId")
                        .HasName("pk_alunos_disciplinas");

                    b.HasIndex("SubjectId")
                        .HasDatabaseName("ix_alunos_disciplinas_subject_id");

                    b.ToTable("alunos_disciplinas", (string)null);
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("integer")
                        .HasColumnName("professor_id");

                    b.HasKey("Id")
                        .HasName("pk_disciplinas");

                    b.HasIndex("ProfessorId")
                        .HasDatabaseName("ix_disciplinas_professor_id");

                    b.ToTable("disciplinas", (string)null);
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.StudentSubject", b =>
                {
                    b.HasOne("SmartSchool.Domain.Models.Student", "Student")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_alunos_disciplinas_alunos_student_id");

                    b.HasOne("SmartSchool.Domain.Models.Subject", "Subject")
                        .WithMany("SubjectStudents")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_alunos_disciplinas_disciplinas_subject_id");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Subject", b =>
                {
                    b.HasOne("SmartSchool.Domain.Models.Professor", "Professor")
                        .WithMany("Subjects")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_disciplinas_professores_professor_id");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Professor", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Student", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SmartSchool.Domain.Models.Subject", b =>
                {
                    b.Navigation("SubjectStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
